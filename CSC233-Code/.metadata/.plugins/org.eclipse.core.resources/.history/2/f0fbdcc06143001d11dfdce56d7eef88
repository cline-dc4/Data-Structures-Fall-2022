package application;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;

/**
 * The class that creates all GUI elements for the TheaterEvent class.
 * @author DC
 * @version 10/2/22
 */
public class TheaterEventPane extends GridPane implements EventHandler<ActionEvent>
{
	/**creates the TextField for the name of the event.*/
	private TextField nameTF;
	/**creates the ComboBox for the location.*/
	private ComboBox<String> locationCB;
	/**creates the TextField for the cost of the event.*/
	private TextField costTF;
	/**creates the ComboBox for the T/F if the event is a musical.*/
	private ComboBox<String> musicalCB;
	/**creates the TextField for the length of the event.*/
	private TextField lengthTF;
	/**creates the Button for submitting the event.*/
	private Button submitB;
	/**allows TheaterEventPane to interact with the center TextArea.*/
	private TextArea centerTA;
	
	/**
	 * The constructor for the class that combines all the variables
	 * to create the elements on the GUI.
	 */
	public TheaterEventPane(TextArea centerTA)
	{
		//centerTA
		this.centerTA = centerTA;
		//nameTF
		nameTF = new TextField();
		this.add(new Label("Name: "), 0, 0);
		add(nameTF, 1, 0);
		//locationCB
		locationCB = new ComboBox<String>();
		locationCB.getItems().addAll("Indoors", "Outdoors");
		this.add(new Label("Location: "), 0, 1);
		add(locationCB, 1, 1);
		//costTF
		costTF = new TextField();
		this.add(new Label("Cost: "),  0, 2);
		add(costTF, 1, 2);
		//musicalCB
		musicalCB = new ComboBox<String>();
		musicalCB.getItems().addAll("True", "False");
		this.add(new Label("Musical?: "),  0,  3);
		add(musicalCB, 1, 3);
		//lengthTF
		lengthTF = new TextField();
		this.add(new Label("Length: "),  0, 4);
		add(lengthTF, 1, 4);
		//submitB
		submitB = new Button("Submit Theater Event");
		submitB.setOnAction(this);
		add(submitB, 0, 5);
	}

	@Override
	public void handle(ActionEvent event) 
	{
		if(event.getSource() == submitB)
		{
			//name
			String name = nameTF.getText();
			//location
			char location = 'i';
			if(locationCB.getSelectionModel().getSelectedItem().equals("Indoors"))
				location = 'i';
			else if(locationCB.getSelectionModel().getSelectedItem().equals("Outdoors"));\
				location = 'o';
			//cost
			double cost = Double.parseDouble(costTF.getText());
			//musical
			boolean musical = true;
			if(musicalCB.getSelectionModel().getSelectedItem().equals("True"))
				musical = true;
			else if(musicalCB.getSelectionModel().getSelectedItem().equals("False"))
				musical = false;
			//length
			int length = Integer.parseInt(lengthTF.getText());
			
			Event mEvent = new TheaterEvent(name, cost, location, musical, length);
			centerTA.appendText(mEvent.toString());
		}
	}

}


